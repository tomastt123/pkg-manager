services:
  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: kg_php
    working_dir: /srv/api
    volumes:
      - ./api:/srv/api:cached
      - api_var:/srv/api/var
    depends_on:
      redis:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    env_file:
        - ./.env
    environment:
      DATABASE_URL: "postgresql://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-!ChangeMe!}@database:5432/${POSTGRES_DB:-app}"
      NEO4J_DEFAULT_CONNECTION_DSN: "${NEO4J_DEFAULT_CONNECTION_DSN}"
      NEO4J_USER:                "${NEO4J_USER}"
      NEO4J_PASS:                "${NEO4J_PASS}"
      HUGGINGFACE_API_TOKEN:     "${HUGGINGFACE_API_TOKEN}"
      HUGGINGFACE_NER_MODEL:     "${HUGGINGFACE_NER_MODEL}"
      HUGGINGFACE_RE_MODEL:      "${HUGGINGFACE_RE_MODEL}"
      MESSENGER_TRANSPORT_DSN:   "${MESSENGER_TRANSPORT_DSN}"
    command: >
      bash -c "
        chown -R www-data:www-data /srv/api/var &&
        chmod -R 770 /srv/api/var &&
        php-fpm
      "

  database:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB:       "${POSTGRES_DB}"
      POSTGRES_USER:     "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    volumes:
      - database_data:/var/lib/postgresql/data:rw

  nginx:
    image: nginx:stable
    container_name: kg_nginx
    ports:
      - "8000:80"
    volumes:
      - ./api/public:/srv/api/public:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php

  redis:
    image: redis:7-alpine
    container_name: kg_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - redis_data:/data

  neo4j:
    image: neo4j:5
    container_name: kg_neo4j
    environment:
      NEO4J_AUTH: "${NEO4J_USER}/${NEO4J_PASS}"
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u ${NEO4J_USER} -p ${NEO4J_PASS} \"RETURN 1;\""]
      interval: 10s
      timeout: 5s
      retries: 5

  mercure:
    image: dunglas/mercure
    container_name: kg_mercure
    environment:
      - DEBUG=1
      - ALLOW_ANONYMOUS=1
      - CORS_ALLOWED_ORIGINS=*
      - PUBLISH_ALLOWED_ORIGINS=*
      - MERCURE_PUBLISHER_JWT_KEY=${MERCURE_PUBLISHER_JWT_KEY}
      - MERCURE_SUBSCRIBER_JWT_KEY=${MERCURE_SUBSCRIBER_JWT_KEY}
    ports:
      - "8001:80"

volumes:
  api_var:
  neo4j_data:
  database_data:
  redis_data: